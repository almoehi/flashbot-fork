
# To run locally:
# $ sbt run
# $ sbt "run 9002 -Dakka.cluster.roles.0=ingest -Dakka.port=2552"

# To run in prod:
# $ sudo ./app -Dakka.cluster.roles.0=ingest


//hostname = "127.0.0.1"
//hostname = ${?akka.host}
//
//bindhost = "127.0.0.1"
//bindhost = ${?akka.bindhost}
//
//remotehost = "18.216.111.231"
//remotehost = ${?akka.remotehost}

//logger.root=ERROR
//logger.play=INFO
//logger.application=DEBUG

play {
  i18n.langs=["en"]

  assets {
    path = "/public"
    urlPrefix = "/assets"
  }

  filters.headers.contentSecurityPolicy = "script-src 'self' 'unsafe-inline'; connect-src 'self' ws://localhost:9000"

  filters.hosts {
    allowed = ["localhost:9000"]
  }

//  akka.actor-system = "ClusterSystem"
}


flashbot {
  dataroot = ${java.io.tmpdir}"/flashbot"
  marketdata = ${flashbot.dataroot}"/market_data"
  appdata = ${flashbot.dataroot}"/app_data"
}

// -Dflashbot.dataPath=/data/flashbot
// -Dhttp.port=9001
// -Dakka.host='18.216.111.231'
// -Dakka.bindhost='172.31.9.0'
// -Dakka.port=2551
// -Dakka.cluster.roles.0=data-ingest

akka {
  //  loglevel = "DEBUG"
  //  loggers = ["akka.event.slf4j.Slf4jLogger"]
  //  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  //  actor {
  //    provider = "akka.cluster.ClusterActorRefProvider"
  //  }

//  remote {
//    log-remote-lifecycle-events = off
//    netty.tcp {
//      hostname = ${hostname}
//      port = 2551
//      port = ${?akka.port}
//
//      bind-hostname = ${bindhost}
//      bind-port = 2551
//      bind-port = ${?akka.port}
//    }
//  }
//
//  cluster {
//    seed-nodes = [
//      "akka.tcp://ClusterSystem@"${remotehost}":2551"
//      //      "akka.tcp://ClusterSystem@"${remotehost}":2552"
//      "akka.tcp://ClusterSystem@"${hostname}":2551"
//      //      "akka.tcp://ClusterSystem@"${hostname}":2552"
//    ]
//
//    # Possible roles:
//    # - trade
//    # - ingest
//    roles = ["trade"]
//  }

//  persistence {
//    journal {
//      plugin = "akka.persistence.journal.leveldb"
//
//      leveldb {
//        dir = ${flashbot.appdatapath}"/journal"
//        compaction-intervals {
//          "*" = 10000
//        }
//      }
//    }
//
//    snapshot-store {
//      plugin = "akka.persistence.snapshot-store.local"
//      local.dir = ${flashbot.appdatapath}"/snapshot-store"
//    }
//  }
}
