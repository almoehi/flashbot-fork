flashbot {

  api-key = null

  data-root = ${java.io.tmpdir}"/flashbot"
  market-data-root = ${flashbot.data-root}"/market_data"
  app-data-root = ${flashbot.data-root}"/app_data"

  strategies {
    spreader = "com.infixtrading.flashbot.strategies.Spreader"
  }

  exchanges {
    bitstamp {
      class = "com.infixtrading.flashbot.exchanges.Bitstamp"
      pairs = ["btc_usd", "eth_usd", "eth_btc", "ltc_usd", "ltc_btc"]
    }
  }

  sources {
    bitstamp {
      class = "com.infixtrading.flashbot.sources.BitstampMarketDataSource"
    }
  }

  ingest {
    # Whitelist of data addresses to ingest. Used if the "ingest" role is active.
    #
    # Examples:
    #   paths = ["*/*/*"]
    #   paths = ["bitmex/xbtusd/ladder", "binance/*/ladder"]
    #   paths = ["*/*/candles"]
    #
    # Default:
    #   ingest = ["*/*/*"]
    paths = ["*/*/*"]

    # How long to keep data around for after it was ingested.
    retention = "90d"
  }

  bots {
    default = [".*-paper", ".*-background"]
    configs = {}
  }
}

akka {
  loglevel = "DEBUG"

  actor {
//    allow-java-serialization = off

//    serializers {
//      kryo = "com.twitter.chill.akka.AkkaSerializer"
//      json = "com.infixtrading.flashbot.serializers.CirceAkkaSerializer"
//    }

//    serialization-bindings {
//      "io.circe.Json" = json
//
//      "com.infixtrading.flashbot.core.TradingSessionMode" = kryo
//      "com.infixtrading.flashbot.models.core.Account" = kryo
//      "com.infixtrading.flashbot.models.core.Market" = kryo
//      "com.infixtrading.flashbot.models.core.Position" = kryo
//      "com.infixtrading.flashbot.models.core.FixedSize" = kryo
//      "com.infixtrading.flashbot.models.core.Portfolio" = kryo
//      "com.infixtrading.flashbot.report.Report" = kryo
//      "com.infixtrading.flashbot.report.ReportEvent" = kryo
//      "com.infixtrading.flashbot.report.ReportDelta" = kryo

//      "com.infixtrading.flashbot.models.core.TimeRange" = kryo
//      "com.infixtrading.flashbot.models.core.Candle" = kryo
//      "com.infixtrading.flashbot.models.core.Ladder" = kryo
//
//      "com.infixtrading.flashbot.models.api.TradingEngineCommand" = kryo
//      "com.infixtrading.flashbot.models.api.TradingEngineEvent" = kryo
//      "com.infixtrading.flashbot.models.api.TradingEngineQuery" = kryo
//      "com.infixtrading.flashbot.models.api.TradingEngineResponse" = kryo
//      "com.infixtrading.flashbot.models.api.TradingEngineState" = kryo
//      "com.infixtrading.flashbot.models.api.TradingSessionEvent" = kryo
//      "com.infixtrading.flashbot.models.api.TradingSessionState" = kryo
//    }
  }

  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb"

      leveldb {
        dir = ${flashbot.app-data-root}"/journal"
        compaction-intervals {
          "*" = 10000
        }
      }
    }

    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = ${flashbot.app-data-root}"/snapshot-store"
    }
  }
}
