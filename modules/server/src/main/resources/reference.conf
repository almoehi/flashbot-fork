flashbot {

  api-key = null

  data-root = "target/flashbot"
  market-data-root = ${flashbot.data-root}"/market_data"
  app-data-root = ${flashbot.data-root}"/app_data"

  strategies {
    scanner = "com.infixtrading.flashbot.strategies.ScannerStrategy"
  }

  exchanges {
    bitstamp {
      class = "com.infixtrading.flashbot.exchanges.Bitstamp"
      pairs = ["btc_usd", "eth_usd", "eth_btc", "ltc_usd", "ltc_btc"]
    }

    bitfinex {
      class = "com.infixtrading.flashbot.exchanges.Bitfinex"
      pairs = ["btc_usd", "eth_usd", "eth_btc", "ltc_usd", "ltc_btc"]
    }
  }

  sources {
    bitstamp {
      class = "com.infixtrading.flashbot.sources.BitstampMarketDataSource"
    }
    bitfinex {
      class = "com.infixtrading.flashbot.sources.BitfinexMarketDataSource"
    }
  }

  ingest {
    # Whitelist of data addresses to ingest. Used if the "ingest" role is active.
    #
    # Examples:
    #   paths = ["*/*/*"]
    #   paths = ["bitmex/xbtusd/ladder", "binance/*/ladder"]
    #   paths = ["*/*/candles"]
    #
    # Default:
    #   ingest = ["*/*/*"]
    paths = ["*/*/*"]

    # How long to keep data around for after it was ingested.
    retention = "90d"
  }

  bots {
    default = [".*-paper", ".*-background"]
    configs = {}
  }

  akka {

    loggers = ["akka.event.slf4j.Slf4jLogger"]
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    loglevel = "DEBUG"

    actor {
      allow-java-serialization = off

      serializers {
        kryo = "com.twitter.chill.akka.AkkaSerializer"
        json = "com.infixtrading.flashbot.serializers.CirceAkkaSerializer"
      }

      serialization-bindings {
        "io.circe.Json" = json
        "com.infixtrading.flashbot.models.api.TradingEngineEvent" = kryo
      }
    }

    persistence {
      journal {
        plugin = "akka.persistence.journal.leveldb"

        leveldb {
          native = off
          dir = ${flashbot.app-data-root}"/journal"
          compaction-intervals {
            "*" = 10000
          }
        }
      }

      snapshot-store {
        plugin = "akka.persistence.snapshot-store.local"
        local.dir = ${flashbot.app-data-root}"/snapshot-store"
      }
    }
  }
}

